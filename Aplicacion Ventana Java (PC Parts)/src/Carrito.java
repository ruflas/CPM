
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author ruflas
 */
public class Carrito extends javax.swing.JFrame {

    /**
     * Creates new form Carrito
     */
    private Carrito() {
        initComponents();
    }

    public Carrito(Principal VPrincipal) {
        this();
        this.VPrincipal = VPrincipal;
        this.carrito = VPrincipal.carrito;
        this.productos = VPrincipal.productos;
        LCarrito.setModel(new javax.swing.DefaultListModel());
        this.setIconImage(new ImageIcon("src/images/logo.png").getImage());
        cargaCarrito();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        LCarrito = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        LPrecio = new javax.swing.JLabel();
        BRealizarPedido = new javax.swing.JButton();
        BEliminarCarrito = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Carrito");
        setResizable(false);

        jScrollPane1.setViewportView(LCarrito);

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel1.setText("Subtotal art√≠culos:");

        LPrecio.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        LPrecio.setForeground(new java.awt.Color(51, 255, 51));

        BRealizarPedido.setBackground(new java.awt.Color(255, 102, 0));
        BRealizarPedido.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        BRealizarPedido.setForeground(new java.awt.Color(255, 255, 255));
        BRealizarPedido.setText("Realizar Pedido");
        BRealizarPedido.setEnabled(false);
        BRealizarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BRealizarPedidoActionPerformed(evt);
            }
        });

        BEliminarCarrito.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/quitar-del-carrito.png"))); // NOI18N
        BEliminarCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BEliminarCarritoActionPerformed(evt);
            }
        });

        jLabel2.setText("Eliminar del carrito");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(LPrecio))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(BEliminarCarrito)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BRealizarPedido)
                            .addComponent(jLabel1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BEliminarCarrito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LPrecio)
                        .addGap(77, 77, 77)
                        .addComponent(BRealizarPedido))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BEliminarCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BEliminarCarritoActionPerformed
        // TODO add your handling code here:
        if (LCarrito.getSelectedValue() != null) {
            System.out.println("Selected Item: " + LCarrito.getSelectedValue());
            if (this.carrito != null) {
                javax.swing.DefaultListModel M = (javax.swing.DefaultListModel) this.LCarrito.getModel();
                Producto selected = null;
                for (Producto producto : this.carrito) {
                    String[] splitSelectedItem = LCarrito.getSelectedValue().split(" ");
                    String nameSelectedItem = "";
                    for (int i = 1; i <= splitSelectedItem.length - 2; i++) {
                        if (i != 1) {
                            nameSelectedItem += " " + splitSelectedItem[i];
                        } else {
                            nameSelectedItem += splitSelectedItem[i];
                        }
                    }
                    if (producto.getNombre().contains(nameSelectedItem)) {
                        selected = producto;
                    }
                }
                if (selected != null) {
                    while (cantidadProducto(selected) > 0) {
                        this.carrito.remove(this.carrito.indexOf(selected));
                        System.out.println("Remove Item: " + selected.getNombre());
                        System.out.println(this.carrito.size());
                    }
                    this.VPrincipal.carrito = this.carrito;
                }
                M.remove(LCarrito.getSelectedIndex());
                this.VPrincipal.mostrarCantidadCarrito();
                precioCarrito();
                if (this.carrito.size() > 0) {
                    this.BRealizarPedido.setEnabled(true);
                } else {
                    this.BRealizarPedido.setEnabled(false);
                }
            }
        }
    }//GEN-LAST:event_BEliminarCarritoActionPerformed

    private void BRealizarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BRealizarPedidoActionPerformed
        // TODO add your handling code here:
        Pago VPago = new Pago(this);
        VPago.setVisible(true);
    }//GEN-LAST:event_BRealizarPedidoActionPerformed

    public String getTextCarrito(){
       return this.carrito.toString();
    }
    
    public void cargaCarrito() {
        javax.swing.DefaultListModel M = (javax.swing.DefaultListModel) this.LCarrito.getModel();
        Map<Integer, Producto> mapProductos = new HashMap<Integer, Producto>();

        if (this.carrito != null) {
            if (this.carrito.size() > 0) {
                this.BRealizarPedido.setEnabled(true);
            } else {
                this.BRealizarPedido.setEnabled(false);
            }
            for (Producto producto : this.carrito) {
                int hashCode = producto.hashCode();
                if (mapProductos.containsKey(hashCode)) {
                    Producto p = mapProductos.get(hashCode);
                    int cantidad = cantidadProducto(producto);
                    String productoStr = cantidad + " " + producto.getNombre() + " " + producto.getPrecio();
                    // Buscar y eliminar entradas repetidas del producto a insertar
                    for (int i = 0; i < M.getSize(); i++) {
                        String entry = (String) M.getElementAt(i);
                        if (entry.contains(producto.getNombre())) {
                            M.removeElementAt(i);
                            break;
                        }
                    }

                    M.addElement(productoStr);
                } else {
                    mapProductos.put(hashCode, producto);
                    String productoStr = "1 " + producto.getNombre() + " " + String.format("%.2f", producto.getPrecio());

                    // Buscar y eliminar entradas repetidas del producto a insertar
                    for (int i = 0; i < M.getSize(); i++) {
                        String entry = (String) M.getElementAt(i);
                        if (entry.contains(producto.getNombre())) {
                            M.removeElementAt(i);
                            break;
                        }
                    }

                    M.addElement(productoStr);
                }
            }
        }
        precioCarrito();
    }

    public double precioCarrito() {
        double precioTotal = 0;
        for (Producto producto : this.carrito) {
            precioTotal += producto.getPrecio() - (producto.getPrecio() * producto.getOferta());
        }
        LPrecio.setText(String.format("%.2f ‚Ç¨", precioTotal));
        return precioTotal;
    }

    public int cantidadProducto(Producto producto) {
        int cantidad = 0;
        for (Producto p : this.carrito) {
            if (p.equals(producto)) {
                cantidad++;
            }
        }
        return cantidad;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Carrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Carrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Carrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Carrito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Carrito().setVisible(true);
            }
        });
    }

    Principal VPrincipal;
    ArrayList<Producto> productos;
    ArrayList<Producto> carrito;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BEliminarCarrito;
    private javax.swing.JButton BRealizarPedido;
    private javax.swing.JList<String> LCarrito;
    private javax.swing.JLabel LPrecio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
