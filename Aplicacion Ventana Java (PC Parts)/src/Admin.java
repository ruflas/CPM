
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author ruflas
 */
public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    private Admin() {
        initComponents();
        this.setIconImage(new ImageIcon("src/images/logo.png").getImage());
        this.DDP = new DatosPersonales();
        this.DP = new DatosProducto(this);
    }

    public Admin(Principal VPrincipal) {
        this();
        this.VPrincipal = VPrincipal;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BAñadirAdmin = new javax.swing.JButton();
        BEliminarAdmin = new javax.swing.JButton();
        BCambiarInfo = new javax.swing.JButton();
        BAñadirProducto = new javax.swing.JButton();
        BEliminarProducto = new javax.swing.JButton();
        BCambiarInfoProd = new javax.swing.JButton();

        setTitle("Administrador");
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        BAñadirAdmin.setText("Añadir Admin");
        BAñadirAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BAñadirAdminActionPerformed(evt);
            }
        });
        getContentPane().add(BAñadirAdmin, new java.awt.GridBagConstraints());

        BEliminarAdmin.setText("Eliminar Admin");
        BEliminarAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BEliminarAdminActionPerformed(evt);
            }
        });
        getContentPane().add(BEliminarAdmin, new java.awt.GridBagConstraints());

        BCambiarInfo.setText("Cambiar Información Usuario");
        BCambiarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCambiarInfoActionPerformed(evt);
            }
        });
        getContentPane().add(BCambiarInfo, new java.awt.GridBagConstraints());

        BAñadirProducto.setText("Añadir Producto");
        BAñadirProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BAñadirProductoActionPerformed(evt);
            }
        });
        getContentPane().add(BAñadirProducto, new java.awt.GridBagConstraints());

        BEliminarProducto.setText("Eliminar Producto");
        BEliminarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BEliminarProductoActionPerformed(evt);
            }
        });
        getContentPane().add(BEliminarProducto, new java.awt.GridBagConstraints());

        BCambiarInfoProd.setText("Cambiar información Producto");
        BCambiarInfoProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCambiarInfoProdActionPerformed(evt);
            }
        });
        getContentPane().add(BCambiarInfoProd, new java.awt.GridBagConstraints());

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BAñadirAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BAñadirAdminActionPerformed
        // TODO add your handling code here:
        adminChange(true);
    }//GEN-LAST:event_BAñadirAdminActionPerformed

    private void BEliminarAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BEliminarAdminActionPerformed
        // TODO add your handling code here:
        adminChange(false);
    }//GEN-LAST:event_BEliminarAdminActionPerformed

    public void adminChange(boolean change) {
        if (insertaNick()) {
            InformacionUsuario temp = new InformacionUsuario(this.nombre_usuario);
            if (temp.getUsuario(this.nombre_usuario) != null) {
                Usuario.setAdmin(this.nombre_usuario, change);
            } else {
                JOptionPane.showMessageDialog(null, "Usuario no existente.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void BCambiarInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCambiarInfoActionPerformed
        // TODO add your handling code here:
        if (insertaNick()) {
            this.IU = new InformacionUsuario(this.nombre_usuario);
            boolean POK = IU.showDialog();
            if (POK) {
                JOptionPane.showMessageDialog(null, "Información de Usuario '" + this.nombre_usuario + "' actualizada", "Correcto", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_BCambiarInfoActionPerformed

    private void BAñadirProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BAñadirProductoActionPerformed
        // TODO add your handling code here:
        boolean POK = DP.showDialog();
        Producto p;
        if (POK) {
            if (this.chipset.isEmpty()) {
                p = new Producto(this.nombre_producto, this.precio_producto, this.especificaciones_producto, this.oferta_producto, this.tipo_producto);
                this.añadirProducto(p,"");
            } else {
                if (this.tipo_producto.equals(TipoProducto.CPU)) {
                    CPU c= new CPU(this.nombre_producto, this.precio_producto, this.especificaciones_producto, this.oferta_producto, this.chipset);
                    this.añadirProducto(c,this.chipset);
                } else {
                    PlacaBase e = new PlacaBase(this.nombre_producto, this.precio_producto, this.especificaciones_producto, this.oferta_producto, this.chipset);
                    this.añadirProducto(e,this.chipset);
                }
            }
            VPrincipal.cargaProductos();
        }
    }//GEN-LAST:event_BAñadirProductoActionPerformed

    private void BCambiarInfoProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCambiarInfoProdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BCambiarInfoProdActionPerformed

    private void BEliminarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BEliminarProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BEliminarProductoActionPerformed

    public void añadirProducto(Producto p,String chipset) {
        String NOMBRE_ARCHIVO = "productos.txt";
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(NOMBRE_ARCHIVO, true))) {
            StringBuilder sb = new StringBuilder();
            sb.append(p.getNombre()).append(":");
            sb.append(p.getPrecio()).append(":");
            sb.append(p.getEspecificaciones()).append(":");
            sb.append(p.getOferta()).append(":");
            if (this.chipset !=null && !this.chipset.isEmpty()) {
                if (p.getTipo().equals(TipoProducto.CPU) || p.getTipo().equals(TipoProducto.Motherboard)) {
                    sb.append(p.getTipo().toString()).append(":");
                    if (p instanceof CPU) {
                        sb.append(this.chipset).append("\n");
                    } else if (p instanceof PlacaBase) {
                         sb.append(this.chipset).append("\n");
                    }
                }
            } else {
                System.out.println(p.getTipo().toString());
                sb.append(p.getTipo().toString()).append("\n");
            }
            writer.write(sb.toString());
        } catch (IOException e) {
            System.out.println("Error al escribir en el archivo " + NOMBRE_ARCHIVO);
            e.printStackTrace();
        }
    }

    public void setDatosProducto(String nombre, double precio, double oferta, TipoProducto tipo, String especificaciones, String chipset) {
        this.nombre_producto = nombre;
        this.precio_producto = precio;
        this.oferta_producto = oferta;
        this.tipo_producto = tipo;
        this.especificaciones_producto = especificaciones;
        this.chipset = chipset;
    }

    public boolean insertaNick() {
        boolean POK = DDP.showDialog();
        if (POK) {
            this.nombre_usuario = DDP.getNombre();
        }
        return POK;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Admin().setVisible(true);
        });
    }
    Principal VPrincipal;
    DatosPersonales DDP;
    InformacionUsuario IU;
    DatosProducto DP;
    private String nombre_usuario;
    private String nombre_producto, especificaciones_producto, chipset;
    private TipoProducto tipo_producto;
    private double precio_producto, oferta_producto;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BAñadirAdmin;
    private javax.swing.JButton BAñadirProducto;
    private javax.swing.JButton BCambiarInfo;
    private javax.swing.JButton BCambiarInfoProd;
    private javax.swing.JButton BEliminarAdmin;
    private javax.swing.JButton BEliminarProducto;
    // End of variables declaration//GEN-END:variables
}
