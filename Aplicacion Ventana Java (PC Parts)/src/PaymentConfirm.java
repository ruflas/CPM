
import java.awt.Graphics;
import javax.swing.ImageIcon;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.awt.Font;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author ruflas
 */
public class PaymentConfirm extends javax.swing.JFrame {

    /**
     * Creates new form BTCConfirm
     */
    private PaymentConfirm() {
        initComponents();
        this.setIconImage(new ImageIcon("src/images/logo.png").getImage());
    }

    public PaymentConfirm(Pago VPago) {
        this();
        this.VPago = VPago;
        LBGif.setVisible(false);
        LCGif.setVisible(false);
        if (this.VPago.paymentMethod().equals("Bitcoin")) {
            LGif.setIcon(LBGif.getIcon());
        } else {
            LGif.setIcon(LCGif.getIcon());
        }
        this.setVisible(true); // Al ser ventana inicial es visible al crearse
        generaFactura(this.VPago.getTextoFactura());
        // Generación de los eventos Timer
        java.util.Timer T = new java.util.Timer();
        // Programando 11 eventos 
        for (int i = 1; i <= 11; i = i + 1) {
            java.util.TimerTask TTask = new java.util.TimerTask() {
                public void run() {
                    manejadorTimer();
                }
            };

            T.schedule(TTask, i * 250); // Cada 0.25s, tiempo en milisegundos, 1000ms=1segundo
        }
    }

    void manejadorTimer() {
        int Valor = this.pbCargando.getValue();
        if (Valor == 100) { // Terminó
            System.exit(0);
        } else {
            this.pbCargando.setValue(Valor + 10);
        }
    }

    public static void generaFactura(String textoFactura) {
        // Configurar el tamaño de la página y la fuente
        int anchoPagina = 595;
        int altoPagina = 842;
        Font fuente = new Font("Arial", Font.PLAIN, 12);
        int lineasPorPagina = (altoPagina - 200) / fuente.getSize();

        // Calcular la cantidad de páginas necesarias
        String[] lineas = textoFactura.split("\\r?\\n");
        int cantidadPaginas = (int) Math.ceil((double) lineas.length / lineasPorPagina);

        // Crear el objeto PrinterJob
        PrinterJob job = PrinterJob.getPrinterJob();

        // Asociar un objeto Printable al objeto PrinterJob
        Printable printable = new Printable() {
            @Override
            public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
                if (pageIndex >= cantidadPaginas) {
                    return NO_SUCH_PAGE;
                }

                // Calcular el rango de líneas que se imprimirán en esta página
                int lineaInicial = pageIndex * lineasPorPagina;
                int lineaFinal = Math.min(lineaInicial + lineasPorPagina, lineas.length);

                // Dibujar cada línea en el objeto Graphics
                int y = 100;
                for (int i = lineaInicial; i < lineaFinal; i++) {
                    graphics.setFont(fuente);
                    graphics.drawString(lineas[i], 100, y);
                    y += fuente.getSize();
                }

                return PAGE_EXISTS;
            }
        };
        job.setPrintable(printable);

        // Imprimir el documento
        if (job.printDialog()) {
            try {
                job.print();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pbCargando = new javax.swing.JProgressBar();
        LBGif = new javax.swing.JLabel();
        LCGif = new javax.swing.JLabel();
        LGif = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Payment Confirmation");
        setResizable(false);

        LBGif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ezgif-2-aca54d039b.gif"))); // NOI18N

        LCGif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ezgif-2-79e6d1c374.gif"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LBGif)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LCGif)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 81, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(pbCargando, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(LGif)
                                .addGap(131, 131, 131))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LBGif)
                    .addComponent(LCGif))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(LGif)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pbCargando, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaymentConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaymentConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaymentConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaymentConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaymentConfirm().setVisible(true);
            }
        });
    }
    Pago VPago;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LBGif;
    private javax.swing.JLabel LCGif;
    private javax.swing.JLabel LGif;
    private javax.swing.JProgressBar pbCargando;
    // End of variables declaration//GEN-END:variables
}
