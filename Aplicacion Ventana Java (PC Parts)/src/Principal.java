
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author ruflas
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        VLogin = new Login(this);
        VLogin.setVisible(true);
        initComponents();
        LProductos.setModel(new javax.swing.DefaultListModel());
        cargaProductos();
        mostrarCantidadCarrito();
        this.setIconImage(new ImageIcon("src/images/logo.png").getImage());
        this.MAdmin.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BGTemas = new javax.swing.ButtonGroup();
        BCuenta = new javax.swing.JButton();
        BCarrito = new javax.swing.JButton();
        TBProductos = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        LProductos = new javax.swing.JList<>();
        LElementosCarrito = new javax.swing.JLabel();
        BAñadirCarrito = new javax.swing.JButton();
        BEliminarCarrito = new javax.swing.JButton();
        BConfigurador = new javax.swing.JButton();
        MBPrincipal = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        CBClaro = new javax.swing.JCheckBoxMenuItem();
        CBOscuro = new javax.swing.JCheckBoxMenuItem();
        CBPersonalizado = new javax.swing.JCheckBoxMenuItem();
        jMenu2 = new javax.swing.JMenu();
        MIInformacion = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        MIInstagram = new javax.swing.JMenuItem();
        MITwitter = new javax.swing.JMenuItem();
        MIFacebook = new javax.swing.JMenuItem();
        MAdmin = new javax.swing.JMenu();
        MIOpciones = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PCParts");
        setResizable(false);

        BCuenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/usuario_small.png"))); // NOI18N
        BCuenta.setText("Mi cuenta");
        BCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCuentaActionPerformed(evt);
            }
        });

        BCarrito.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/carrito.png"))); // NOI18N
        BCarrito.setText("Carrito");
        BCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCarritoActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(LProductos);

        TBProductos.addTab("Productos", jScrollPane1);

        LElementosCarrito.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/carritoElementos.png"))); // NOI18N

        BAñadirCarrito.setText("Añadir al carrito");
        BAñadirCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BAñadirCarritoActionPerformed(evt);
            }
        });

        BEliminarCarrito.setText("Eliminar del carrito");
        BEliminarCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BEliminarCarritoActionPerformed(evt);
            }
        });

        BConfigurador.setBackground(new java.awt.Color(204, 102, 0));
        BConfigurador.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        BConfigurador.setForeground(new java.awt.Color(255, 255, 255));
        BConfigurador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pctorre.png"))); // NOI18N
        BConfigurador.setText("Configurador PC");
        BConfigurador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BConfiguradorActionPerformed(evt);
            }
        });

        jMenu1.setText("Propiedades");

        jMenu4.setText("Temas");

        BGTemas.add(CBClaro);
        CBClaro.setSelected(true);
        CBClaro.setText("Claro");
        CBClaro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBClaroActionPerformed(evt);
            }
        });
        jMenu4.add(CBClaro);

        BGTemas.add(CBOscuro);
        CBOscuro.setText("Oscuro");
        CBOscuro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBOscuroActionPerformed(evt);
            }
        });
        jMenu4.add(CBOscuro);

        BGTemas.add(CBPersonalizado);
        CBPersonalizado.setText("Personalizado");
        CBPersonalizado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBPersonalizadoActionPerformed(evt);
            }
        });
        jMenu4.add(CBPersonalizado);

        jMenu1.add(jMenu4);

        MBPrincipal.add(jMenu1);

        jMenu2.setText("Ayuda");

        MIInformacion.setText("Información");
        MIInformacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIInformacionActionPerformed(evt);
            }
        });
        jMenu2.add(MIInformacion);

        MBPrincipal.add(jMenu2);

        jMenu3.setText("Comunidad");

        MIInstagram.setText("Instagram");
        MIInstagram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIInstagramActionPerformed(evt);
            }
        });
        jMenu3.add(MIInstagram);

        MITwitter.setText("Twitter");
        MITwitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MITwitterActionPerformed(evt);
            }
        });
        jMenu3.add(MITwitter);

        MIFacebook.setText("Facebook");
        MIFacebook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIFacebookActionPerformed(evt);
            }
        });
        jMenu3.add(MIFacebook);

        MBPrincipal.add(jMenu3);

        MAdmin.setText("Admin");

        MIOpciones.setText("Opciones");
        MIOpciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MIOpcionesActionPerformed(evt);
            }
        });
        MAdmin.add(MIOpciones);

        MBPrincipal.add(MAdmin);

        setJMenuBar(MBPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LElementosCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BCarrito)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BCuenta))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(TBProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(BConfigurador)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(BAñadirCarrito)
                .addGap(38, 38, 38)
                .addComponent(BEliminarCarrito)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LElementosCarrito, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(BCuenta)
                                .addComponent(BCarrito)))
                        .addGap(16, 16, 16)
                        .addComponent(TBProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BConfigurador)
                        .addGap(105, 105, 105)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BAñadirCarrito)
                    .addComponent(BEliminarCarrito))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCuentaActionPerformed
        // TODO add your handling code here:
        if (this.usuario != null) {
            System.out.println(this.usuario.isAdmin());
        }
        System.out.println(this.usuario.toString());
        DIU = new InformacionUsuario(this.usuario.getUser());
        DIU.setBackground(this.getTheme());
        boolean POK = DIU.showDialog();
        if (POK) {
            JOptionPane.showMessageDialog(null, "Información de Usuario '" + this.usuario.getUser() + "' actualizada", "Correcto", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_BCuentaActionPerformed

    public Color getTheme() {
        return this.getBackground();
    }

    private void MIOpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIOpcionesActionPerformed
        // TODO add your handling code here:
        VAdmin = new Admin(this);
        VAdmin.setBackground(this.getTheme());
        VAdmin.setVisible(true);
    }//GEN-LAST:event_MIOpcionesActionPerformed

    private void CBClaroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBClaroActionPerformed
        // TODO add your handling code here:
        this.setTheme(Color.WHITE);
    }//GEN-LAST:event_CBClaroActionPerformed

    private void CBOscuroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBOscuroActionPerformed
        // TODO add your handling code here:
        this.setTheme(Color.BLACK);
    }//GEN-LAST:event_CBOscuroActionPerformed

    private void CBPersonalizadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBPersonalizadoActionPerformed
        // TODO add your handling code here:
        Color selectedColor = JColorChooser.showDialog(null, "Seleccione un color", this.getBackground());
        this.setTheme(selectedColor);
    }//GEN-LAST:event_CBPersonalizadoActionPerformed

    private void BAñadirCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BAñadirCarritoActionPerformed
        // TODO add your handling code here:
        if (LProductos.getSelectedValue() != null) {
            for (Producto p : this.productos) {
                if (p.getNombre().equals(LProductos.getSelectedValue())) {
                    this.carrito.add(p);
                    mostrarCantidadCarrito();
                }
            }
        }
    }//GEN-LAST:event_BAñadirCarritoActionPerformed

    private void BEliminarCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BEliminarCarritoActionPerformed
        if (LProductos.getSelectedValue() != null) {
            for (Producto p : this.productos) {
                if (p.getNombre().equals(LProductos.getSelectedValue())) {
                    this.carrito.remove(p);
                    mostrarCantidadCarrito();
                }
            }
        }
    }//GEN-LAST:event_BEliminarCarritoActionPerformed

    private void BCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCarritoActionPerformed
        // TODO add your handling code here:
        VCarrito = new Carrito(this);
        VCarrito.setVisible(true);
    }//GEN-LAST:event_BCarritoActionPerformed

    private void BConfiguradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BConfiguradorActionPerformed
        // TODO add your handling code here:
        this.DOC = new OpcionConfigurador(this);
        this.DOC.showDialog();
    }//GEN-LAST:event_BConfiguradorActionPerformed

    private void MIInformacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIInformacionActionPerformed
        // TODO add your handling code here:
        this.DIP = new InformacionPrograma();
        this.DIP.setVisible(true);
    }//GEN-LAST:event_MIInformacionActionPerformed

    private void MIInstagramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIInstagramActionPerformed
        // TODO add your handling code here:
        this.openWebsite("Instagram");
    }//GEN-LAST:event_MIInstagramActionPerformed

    private void MITwitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MITwitterActionPerformed
        // TODO add your handling code here:
        this.openWebsite("Twitter");
    }//GEN-LAST:event_MITwitterActionPerformed

    private void MIFacebookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MIFacebookActionPerformed
        // TODO add your handling code here:
        this.openWebsite("Facebook");
    }//GEN-LAST:event_MIFacebookActionPerformed

    public void openWebsite(String site) {
        try {
            if (site.equals("Instagram")) {
                Desktop.getDesktop().browse(new URI("https://www.instagram.com/pccomponentes/"));
            } else if (site.equals("Twitter")) {
                Desktop.getDesktop().browse(new URI("https://twitter.com/pccomponentes"));
            } else {
                Desktop.getDesktop().browse(new URI("https://www.facebook.com/pccomponentes"));
            }
        } catch (URISyntaxException ex) {

            System.out.println(ex);

        } catch (IOException e) {

            System.out.println(e);

        }
    }

    public void cargaProductos() {
        productos = new ArrayList<Producto>();
        carrito = new ArrayList<Producto>();
        chipsets = new HashMap<Producto, String>();
        javax.swing.DefaultListModel M = (javax.swing.DefaultListModel) this.LProductos.getModel();
        File archivo = new File("productos.txt");
        try {
            Scanner scanner = new Scanner(archivo);
            while (scanner.hasNextLine()) {
                String linea = scanner.nextLine();
                String[] datos = linea.split(":");
                String nombre = datos[0];
                double precio = Double.parseDouble(datos[1]);
                String especificaciones = datos[2];
                double oferta = Double.parseDouble(datos[3]);
                TipoProducto tipo = TipoProducto.valueOf(datos[4]);
                Producto p;
                switch (tipo) {
                    case CPU -> {
                        String chipset = datos[5];
                        p = new CPU(nombre, precio, especificaciones, oferta, chipset);
                        chipsets.put(p, chipset);
                    }
                    case Motherboard -> {
                        String chipset = datos[5];
                        p = new PlacaBase(nombre, precio, especificaciones, oferta, chipset);
                        chipsets.put(p, chipset);
                    }
                    default ->
                        p = new Producto(nombre, precio, especificaciones, oferta, tipo);
                }
                productos.add(p);
                M.addElement(p.getNombre());
            }
            scanner.close();
        } catch (FileNotFoundException e) {
            System.out.println("Error: Archivo no encontrado");
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
    }

    public void setTheme(Color color) {
        if (color != null) {
            this.setBackground(color);
            BCarrito.setBackground(color);
            BCuenta.setBackground(color);
            LProductos.setBackground(color);
            if (color.equals(Color.BLACK)) {
                BCuenta.setForeground(Color.WHITE);
                BCarrito.setForeground(Color.WHITE);
                LProductos.setForeground(Color.WHITE);
            } else if (color.equals(Color.WHITE)) {
                LProductos.setForeground(Color.BLACK);
                BCuenta.setForeground(Color.BLACK);
                BCarrito.setForeground(Color.BLACK);
            }
        }
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
        if (this.usuario.isAdmin()) {
            MAdmin.setVisible(true);
        }
    }

    public void mostrarCantidadCarrito() {
        try {
            // Crea una nueva imagen a partir de la imagen original
            ImageIcon carritoIcon = new ImageIcon(getClass().getResource("/images/carritoElementos.png"));
            Image carritoImage = carritoIcon.getImage();
            BufferedImage bufferedImage = new BufferedImage(carritoImage.getWidth(null), carritoImage.getHeight(null), BufferedImage.TYPE_INT_ARGB);
            Graphics2D g2d = bufferedImage.createGraphics();
            g2d.drawImage(carritoImage, 0, 0, null);

            // Dibuja el número de elementos del carrito en la imagen
            g2d.setColor(Color.WHITE);
            g2d.setFont(new Font("Roboto", Font.BOLD, 11));
            FontMetrics metrics = g2d.getFontMetrics();
            String carritoSize = Integer.toString(carrito.size());
            int x = (bufferedImage.getWidth() - metrics.stringWidth(carritoSize)) / 2;
            int y = ((bufferedImage.getHeight() - metrics.getHeight()) / 2) + metrics.getAscent();
            g2d.drawString(carritoSize, x, y);
            g2d.dispose();

            // Crea un nuevo icono a partir de la nueva imagen
            ImageIcon nuevoIcono = new ImageIcon(bufferedImage);

            // Actualiza el icono del JLabel
            LElementosCarrito.setIcon(nuevoIcono);

        } catch (Exception ex) {
            System.out.println("Error al mostrar la cantidad de elementos del carrito: " + ex.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(false);
            }
        });
    }
    Login VLogin;
    Usuario usuario;
    Admin VAdmin;
    InformacionUsuario DIU;
    ArrayList<Producto> productos;
    HashMap<Producto, String> chipsets;
    ArrayList<Producto> carrito;
    Carrito VCarrito;
    OpcionConfigurador DOC;
    InformacionPrograma DIP;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BAñadirCarrito;
    private javax.swing.JButton BCarrito;
    private javax.swing.JButton BConfigurador;
    private javax.swing.JButton BCuenta;
    private javax.swing.JButton BEliminarCarrito;
    private javax.swing.ButtonGroup BGTemas;
    private javax.swing.JCheckBoxMenuItem CBClaro;
    private javax.swing.JCheckBoxMenuItem CBOscuro;
    private javax.swing.JCheckBoxMenuItem CBPersonalizado;
    private javax.swing.JLabel LElementosCarrito;
    private javax.swing.JList<String> LProductos;
    private javax.swing.JMenu MAdmin;
    private javax.swing.JMenuBar MBPrincipal;
    private javax.swing.JMenuItem MIFacebook;
    private javax.swing.JMenuItem MIInformacion;
    private javax.swing.JMenuItem MIInstagram;
    private javax.swing.JMenuItem MIOpciones;
    private javax.swing.JMenuItem MITwitter;
    private javax.swing.JTabbedPane TBProductos;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
