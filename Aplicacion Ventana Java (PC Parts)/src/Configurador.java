
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import javax.swing.ImageIcon;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author ruflas
 */
public class Configurador extends javax.swing.JFrame {

    /**
     * Creates new form Configurador
     */
    private Configurador() {
        initComponents();
        this.setIconImage(new ImageIcon("src/images/logo.png").getImage());
    }

    public Configurador(OpcionConfigurador DOC) {
        this();
        this.DOC = DOC;
        this.LChipset.setText(this.DOC.getChipsetSelected());
        cargarCheckBoxes();
    }

    public void cargarCheckBoxes() {
        for (Producto p : cargarCheckBox("CPU")) {
            CBCpu.addItem(p.getNombre());
        }
        for (Producto p : cargarCheckBox("Disco")) {
            CBDisco.addItem(p.getNombre());
        }
        for (Producto p : cargarCheckBox("RAM")) {
            CBRam.addItem(p.getNombre());
        }
        for (Producto p : cargarCheckBox("Torre")) {
            CBTorre.addItem(p.getNombre());
        }
        for (Producto p : cargarCheckBox("Motherboard")) {
            CBPlaca.addItem(p.getNombre());
        }
        for (Producto p : cargarCheckBox("Ventilador")) {
            CBRefri.addItem(p.getNombre());
        }
        for (Producto p : cargarCheckBox("PSU")) {
            CBPsu.addItem(p.getNombre());
        }
        for (Producto p : cargarCheckBox("GPU")) {
            CBGpu.addItem(p.getNombre());
        }
        for (Producto p : cargarCheckBox("SO")) {
            CBSo.addItem(p.getNombre());
        }
    }

    public ArrayList<Producto> cargarCheckBox(String tipo) {
        ArrayList<Producto> cb = new ArrayList<Producto>();
        if (tipo.equals("CPU") || tipo.equals("Motherboard")) {
            Set<Map.Entry<Producto, String>> auxSet = this.DOC.VPrincipal.chipsets.entrySet();
            Iterator<Map.Entry<Producto, String>> it = auxSet.iterator();
            while (it.hasNext()) {
                Map.Entry<Producto, String> cEntry = it.next();
                if (cEntry.getValue().contains(LChipset.getText()) && cEntry.getKey().getTipo().toString().equals(tipo)) {
                    cb.add(cEntry.getKey());
                }
            }
            return cb;
        }
        for (Producto p : this.DOC.VPrincipal.productos) {
            if (p.getTipo().toString().equals(tipo)) {
                cb.add(p);
            }
        }
        return cb;
    }

    public double calcularPrecio(String nombre) {
        double precio = 0;
        for (Producto p : this.DOC.VPrincipal.productos) {
            if (p.getNombre().equals(nombre)) {
                precio += (p.getPrecio() - (p.getPrecio() * p.getOferta()));
                return precio;
            }
        }
        return precio;
    }

    public double calculaPrecioTotal() {
        double precioTotal = 0;

        if (CBCpu.getSelectedItem() != null) {
            precioTotal += calcularPrecio(CBCpu.getSelectedItem().toString());
        }

        if (CBDisco.getSelectedItem() != null) {
            precioTotal += calcularPrecio(CBDisco.getSelectedItem().toString());
        }

        if (CBRam.getSelectedItem() != null) {
            precioTotal += calcularPrecio(CBRam.getSelectedItem().toString());
        }

        if (CBPlaca.getSelectedItem() != null) {
            precioTotal += calcularPrecio(CBPlaca.getSelectedItem().toString());
        }

        if (CBGpu.getSelectedItem() != null) {
            precioTotal += calcularPrecio(CBGpu.getSelectedItem().toString());
        }

        if (CBSo.getSelectedItem() != null) {
            precioTotal += calcularPrecio(CBSo.getSelectedItem().toString());
        }

        if (CBTorre.getSelectedItem() != null) {
            precioTotal += calcularPrecio(CBTorre.getSelectedItem().toString());
        }

        if (CBRefri.getSelectedItem() != null) {
            precioTotal += calcularPrecio(CBRefri.getSelectedItem().toString());
        }

        if (CBPsu.getSelectedItem() != null) {
            precioTotal += calcularPrecio(CBPsu.getSelectedItem().toString());
        }

        if (CBMontaje.isSelected()) {
            precioTotal += 50;
        }
        if (CBDiseño.isSelected()) {
            precioTotal += 100;
        }
        LPrecio.setText(String.format("%.2f €", precioTotal));
        return precioTotal;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        LChipset = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        CBCpu = new javax.swing.JComboBox<>();
        CBPlaca = new javax.swing.JComboBox<>();
        CBRam = new javax.swing.JComboBox<>();
        CBTorre = new javax.swing.JComboBox<>();
        CBRefri = new javax.swing.JComboBox<>();
        CBDisco = new javax.swing.JComboBox<>();
        CBPsu = new javax.swing.JComboBox<>();
        CBGpu = new javax.swing.JComboBox<>();
        CBSo = new javax.swing.JComboBox<>();
        CBMontaje = new javax.swing.JCheckBox();
        BConfigurador = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        LPrecio = new javax.swing.JLabel();
        CBDiseño = new javax.swing.JCheckBox();
        BCrearDiseño = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configurador");
        setResizable(false);

        jLabel1.setText("Chipset:");

        LChipset.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N

        jLabel2.setText("CPU");

        jLabel3.setText("Tarjeta Gráfica");

        jLabel4.setText("Memoria RAM");

        jLabel5.setText("Fuente de Alimentación");

        jLabel6.setText("Placa Base");

        jLabel7.setText("Torre/Caja");

        jLabel8.setText("Refrigeración CPU");

        jLabel9.setText("Disco Principal");

        jLabel11.setText("Sistema operativo");

        CBCpu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBCpuActionPerformed(evt);
            }
        });

        CBPlaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBPlacaActionPerformed(evt);
            }
        });

        CBRam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBRamActionPerformed(evt);
            }
        });

        CBTorre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBTorreActionPerformed(evt);
            }
        });

        CBRefri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBRefriActionPerformed(evt);
            }
        });

        CBDisco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBDiscoActionPerformed(evt);
            }
        });

        CBPsu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBPsuActionPerformed(evt);
            }
        });

        CBGpu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBGpuActionPerformed(evt);
            }
        });

        CBSo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBSoActionPerformed(evt);
            }
        });

        CBMontaje.setText("Montaje");
        CBMontaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBMontajeActionPerformed(evt);
            }
        });

        BConfigurador.setBackground(new java.awt.Color(204, 102, 0));
        BConfigurador.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        BConfigurador.setForeground(new java.awt.Color(255, 255, 255));
        BConfigurador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/carrito.png"))); // NOI18N
        BConfigurador.setText("Añadir al carrito");
        BConfigurador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BConfiguradorActionPerformed(evt);
            }
        });

        jLabel10.setText("Total:");

        LPrecio.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        LPrecio.setForeground(new java.awt.Color(51, 255, 51));

        CBDiseño.setText("Diseño Personalizado");
        CBDiseño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBDiseñoActionPerformed(evt);
            }
        });

        BCrearDiseño.setText("Diseñar");
        BCrearDiseño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCrearDiseñoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(77, 77, 77)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel6)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel4)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(LChipset))
                                    .addComponent(CBCpu, 0, 157, Short.MAX_VALUE)
                                    .addComponent(CBPlaca, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(CBRam, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(CBPsu, 0, 221, Short.MAX_VALUE)
                                    .addComponent(CBGpu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(CBSo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BConfigurador, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CBRefri, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(CBDisco, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CBTorre, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 64, Short.MAX_VALUE)))))
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CBDiseño)
                            .addComponent(CBMontaje)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(BCrearDiseño)))
                        .addGap(82, 82, 82)))
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(121, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(LChipset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CBCpu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(CBPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(CBRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(CBTorre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(CBRefri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(CBDisco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(CBPsu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CBGpu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CBSo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(LPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CBMontaje)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CBDiseño)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BCrearDiseño)))
                .addGap(20, 20, 20)
                .addComponent(BConfigurador)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CBCpuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBCpuActionPerformed
        // TODO add your handling code here:
        calculaPrecioTotal();
    }//GEN-LAST:event_CBCpuActionPerformed

    private void CBPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBPlacaActionPerformed
        // TODO add your handling code here:
        calculaPrecioTotal();
    }//GEN-LAST:event_CBPlacaActionPerformed

    private void CBRamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBRamActionPerformed
        // TODO add your handling code here:ç
        calculaPrecioTotal();
    }//GEN-LAST:event_CBRamActionPerformed

    private void CBTorreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBTorreActionPerformed
        // TODO add your handling code here:
        calculaPrecioTotal();
    }//GEN-LAST:event_CBTorreActionPerformed

    private void CBRefriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBRefriActionPerformed
        // TODO add your handling code here:
        calculaPrecioTotal();
    }//GEN-LAST:event_CBRefriActionPerformed

    private void CBDiscoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBDiscoActionPerformed
        // TODO add your handling code here:
        calculaPrecioTotal();
    }//GEN-LAST:event_CBDiscoActionPerformed

    private void CBPsuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBPsuActionPerformed
        // TODO add your handling code here:
        calculaPrecioTotal();
    }//GEN-LAST:event_CBPsuActionPerformed

    private void CBGpuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBGpuActionPerformed
        // TODO add your handling code here:
        calculaPrecioTotal();
    }//GEN-LAST:event_CBGpuActionPerformed

    private void CBSoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBSoActionPerformed
        // TODO add your handling code here:
        calculaPrecioTotal();
    }//GEN-LAST:event_CBSoActionPerformed

    private void CBMontajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBMontajeActionPerformed
        // TODO add your handling code here:
        calculaPrecioTotal();
    }//GEN-LAST:event_CBMontajeActionPerformed

    private void BConfiguradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BConfiguradorActionPerformed
        // TODO add your handling code here:
        this.DOC.VPrincipal.carrito.add(new Producto("PC CUSTOM", calculaPrecioTotal(),creaEspecificacion(),TipoProducto.PC));
        this.DOC.VPrincipal.mostrarCantidadCarrito();
        this.dispose();
    }//GEN-LAST:event_BConfiguradorActionPerformed

    private void BCrearDiseñoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCrearDiseñoActionPerformed
        // TODO add your handling code here:
        Paint paint = new Paint();
        paint.setVisible(true);
    }//GEN-LAST:event_BCrearDiseñoActionPerformed

    private void CBDiseñoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBDiseñoActionPerformed
        // TODO add your handling code here:
        calculaPrecioTotal();
    }//GEN-LAST:event_CBDiseñoActionPerformed

    public String creaEspecificacion() {
        String result = "";
        if (CBCpu.getSelectedItem() != null) {
            result += CBCpu.getSelectedItem().toString() + "\n";
        }

        if (CBDisco.getSelectedItem() != null) {
            result += CBDisco.getSelectedItem().toString() + "\n";
        }

        if (CBRam.getSelectedItem() != null) {
            result += CBRam.getSelectedItem().toString() + "\n";
        }

        if (CBPlaca.getSelectedItem() != null) {
            result += CBPlaca.getSelectedItem().toString() + "\n";
        }

        if (CBGpu.getSelectedItem() != null) {
            result += CBGpu.getSelectedItem().toString() + "\n";
        }

        if (CBSo.getSelectedItem() != null) {
            result += CBSo.getSelectedItem().toString() + "\n";
        }

        if (CBTorre.getSelectedItem() != null) {
            result += CBTorre.getSelectedItem().toString() + "\n";
        }

        if (CBRefri.getSelectedItem() != null) {
            result += CBRefri.getSelectedItem().toString() + "\n";
        }

        if (CBPsu.getSelectedItem() != null) {
            result += CBPsu.getSelectedItem().toString() + "\n";
        }

        return result;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Configurador.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Configurador.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Configurador.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Configurador.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Configurador().setVisible(true);
            }
        });
    }
    OpcionConfigurador DOC;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BConfigurador;
    private javax.swing.JButton BCrearDiseño;
    private javax.swing.JComboBox<String> CBCpu;
    private javax.swing.JComboBox<String> CBDisco;
    private javax.swing.JCheckBox CBDiseño;
    private javax.swing.JComboBox<String> CBGpu;
    private javax.swing.JCheckBox CBMontaje;
    private javax.swing.JComboBox<String> CBPlaca;
    private javax.swing.JComboBox<String> CBPsu;
    private javax.swing.JComboBox<String> CBRam;
    private javax.swing.JComboBox<String> CBRefri;
    private javax.swing.JComboBox<String> CBSo;
    private javax.swing.JComboBox<String> CBTorre;
    private javax.swing.JLabel LChipset;
    private javax.swing.JLabel LPrecio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
